// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flopplayer3.proto

package flopplayer3

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type IntoData struct {
	Data                 []*IntoData_Record `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	PublicPoker          []int32            `protobuf:"varint,2,rep,packed,name=PublicPoker,proto3" json:"PublicPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IntoData) Reset()         { *m = IntoData{} }
func (m *IntoData) String() string { return proto.CompactTextString(m) }
func (*IntoData) ProtoMessage()    {}
func (*IntoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c130fafd91faff0, []int{0}
}

func (m *IntoData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntoData.Unmarshal(m, b)
}
func (m *IntoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntoData.Marshal(b, m, deterministic)
}
func (m *IntoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntoData.Merge(m, src)
}
func (m *IntoData) XXX_Size() int {
	return xxx_messageInfo_IntoData.Size(m)
}
func (m *IntoData) XXX_DiscardUnknown() {
	xxx_messageInfo_IntoData.DiscardUnknown(m)
}

var xxx_messageInfo_IntoData proto.InternalMessageInfo

func (m *IntoData) GetData() []*IntoData_Record {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *IntoData) GetPublicPoker() []int32 {
	if m != nil {
		return m.PublicPoker
	}
	return nil
}

type IntoData_Record struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Pokers               []int32  `protobuf:"varint,2,rep,packed,name=Pokers,proto3" json:"Pokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntoData_Record) Reset()         { *m = IntoData_Record{} }
func (m *IntoData_Record) String() string { return proto.CompactTextString(m) }
func (*IntoData_Record) ProtoMessage()    {}
func (*IntoData_Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c130fafd91faff0, []int{0, 0}
}

func (m *IntoData_Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntoData_Record.Unmarshal(m, b)
}
func (m *IntoData_Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntoData_Record.Marshal(b, m, deterministic)
}
func (m *IntoData_Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntoData_Record.Merge(m, src)
}
func (m *IntoData_Record) XXX_Size() int {
	return xxx_messageInfo_IntoData_Record.Size(m)
}
func (m *IntoData_Record) XXX_DiscardUnknown() {
	xxx_messageInfo_IntoData_Record.DiscardUnknown(m)
}

var xxx_messageInfo_IntoData_Record proto.InternalMessageInfo

func (m *IntoData_Record) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IntoData_Record) GetPokers() []int32 {
	if m != nil {
		return m.Pokers
	}
	return nil
}

// The response message containing the greetings
type OutData struct {
	OverCardNumber       int32    `protobuf:"varint,1,opt,name=OverCardNumber,proto3" json:"OverCardNumber,omitempty"`
	LeaderId             string   `protobuf:"bytes,2,opt,name=LeaderId,proto3" json:"LeaderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutData) Reset()         { *m = OutData{} }
func (m *OutData) String() string { return proto.CompactTextString(m) }
func (*OutData) ProtoMessage()    {}
func (*OutData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c130fafd91faff0, []int{1}
}

func (m *OutData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutData.Unmarshal(m, b)
}
func (m *OutData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutData.Marshal(b, m, deterministic)
}
func (m *OutData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutData.Merge(m, src)
}
func (m *OutData) XXX_Size() int {
	return xxx_messageInfo_OutData.Size(m)
}
func (m *OutData) XXX_DiscardUnknown() {
	xxx_messageInfo_OutData.DiscardUnknown(m)
}

var xxx_messageInfo_OutData proto.InternalMessageInfo

func (m *OutData) GetOverCardNumber() int32 {
	if m != nil {
		return m.OverCardNumber
	}
	return 0
}

func (m *OutData) GetLeaderId() string {
	if m != nil {
		return m.LeaderId
	}
	return ""
}

func init() {
	proto.RegisterType((*IntoData)(nil), "flopplayer3.IntoData")
	proto.RegisterType((*IntoData_Record)(nil), "flopplayer3.IntoData.Record")
	proto.RegisterType((*OutData)(nil), "flopplayer3.OutData")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Flopplayer3Client is the client API for Flopplayer3 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Flopplayer3Client interface {
	// Sends a greeting
	CalculatorFlop(ctx context.Context, in *IntoData, opts ...grpc.CallOption) (*OutData, error)
}

type flopplayer3Client struct {
	cc *grpc.ClientConn
}

func NewFlopplayer3Client(cc *grpc.ClientConn) Flopplayer3Client {
	return &flopplayer3Client{cc}
}

func (c *flopplayer3Client) CalculatorFlop(ctx context.Context, in *IntoData, opts ...grpc.CallOption) (*OutData, error) {
	out := new(OutData)
	err := c.cc.Invoke(ctx, "/flopplayer3.Flopplayer3/CalculatorFlop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Flopplayer3Server is the server API for Flopplayer3 service.
type Flopplayer3Server interface {
	// Sends a greeting
	CalculatorFlop(context.Context, *IntoData) (*OutData, error)
}

func RegisterFlopplayer3Server(s *grpc.Server, srv Flopplayer3Server) {
	s.RegisterService(&_Flopplayer3_serviceDesc, srv)
}

func _Flopplayer3_CalculatorFlop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntoData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Flopplayer3Server).CalculatorFlop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flopplayer3.Flopplayer3/CalculatorFlop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Flopplayer3Server).CalculatorFlop(ctx, req.(*IntoData))
	}
	return interceptor(ctx, in, info, handler)
}

var _Flopplayer3_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flopplayer3.Flopplayer3",
	HandlerType: (*Flopplayer3Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalculatorFlop",
			Handler:    _Flopplayer3_CalculatorFlop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flopplayer3.proto",
}

func init() { proto.RegisterFile("flopplayer3.proto", fileDescriptor_0c130fafd91faff0) }

var fileDescriptor_0c130fafd91faff0 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x4d, 0xe6, 0xea, 0x3c, 0x85, 0x82, 0x07, 0x95, 0x52, 0xbc, 0x28, 0xbd, 0x90, 0x5e,
	0x95, 0xb1, 0x3d, 0x80, 0xe0, 0x44, 0x28, 0xe8, 0x56, 0xf2, 0x06, 0x69, 0x13, 0x41, 0x8c, 0xa6,
	0x1c, 0x13, 0xc1, 0xb7, 0xf0, 0x91, 0xa5, 0xb1, 0x6a, 0x95, 0x5d, 0x85, 0xf3, 0xe5, 0xff, 0x92,
	0xfc, 0x81, 0x93, 0x07, 0x63, 0xfb, 0xde, 0xc8, 0x77, 0x4d, 0xeb, 0xaa, 0x27, 0xeb, 0x2c, 0xc6,
	0x13, 0x54, 0x7c, 0x30, 0x58, 0xd4, 0x2f, 0xce, 0xde, 0x48, 0x27, 0x71, 0x09, 0x87, 0xc3, 0x9a,
	0xb2, 0x7c, 0x56, 0xc6, 0xab, 0x8b, 0x6a, 0xea, 0x7e, 0x87, 0x2a, 0xa1, 0x3b, 0x4b, 0x4a, 0x84,
	0x24, 0xe6, 0x10, 0x37, 0xbe, 0x35, 0x8f, 0x5d, 0x63, 0x9f, 0x34, 0xa5, 0x3c, 0x9f, 0x95, 0x73,
	0x31, 0x45, 0xd9, 0x12, 0xa2, 0x2f, 0x03, 0x13, 0xe0, 0xb5, 0x4a, 0x59, 0xce, 0xca, 0x63, 0xc1,
	0x6b, 0x85, 0xe7, 0x10, 0x85, 0xc8, 0xeb, 0xa8, 0x8d, 0x53, 0x71, 0x0f, 0x47, 0x3b, 0xef, 0xc2,
	0xf1, 0x97, 0x90, 0xec, 0xde, 0x34, 0x6d, 0x24, 0xa9, 0xad, 0x7f, 0x6e, 0x35, 0x05, 0x7d, 0x2e,
	0xfe, 0x51, 0xcc, 0x60, 0x71, 0xa7, 0xa5, 0xd2, 0x54, 0xab, 0x94, 0x87, 0x0b, 0x7e, 0xe6, 0xd5,
	0x16, 0xe2, 0xdb, 0xdf, 0x1e, 0x78, 0x05, 0xc9, 0x46, 0x9a, 0xce, 0x1b, 0xe9, 0x2c, 0x0d, 0x1b,
	0x78, 0xb6, 0xb7, 0x67, 0x76, 0xfa, 0x07, 0x8f, 0x2f, 0x2a, 0x0e, 0xae, 0x79, 0xc3, 0xda, 0x28,
	0xfc, 0xe4, 0xfa, 0x33, 0x00, 0x00, 0xff, 0xff, 0x36, 0x94, 0x78, 0xf6, 0x5e, 0x01, 0x00, 0x00,
}
